{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"slime\u662f\u9488\u5bf9istio\u7684\u6269\u5c55\u5de5\u5177\u3002\u65e8\u5728\u901a\u8fc7\u7b80\u5355\u914d\u7f6e\uff0c\u66f4\u81ea\u52a8\u66f4\u4fbf\u6377\u7684\u4f7f\u7528istio/envoy\u9ad8\u9636\u529f\u80fd\u3002\u5176\u5305\u542b\u4e86\u591a\u4e2a\u6a21\u5757\uff1a \u914d\u7f6e\u61d2\u52a0\u8f7d : \u65e0\u987b\u914d\u7f6eSidecarScope\uff0c\u81ea\u52a8\u6309\u9700\u52a0\u8f7d\u914d\u7f6e/\u670d\u52a1\u53d1\u73b0\u4fe1\u606f Http\u63d2\u4ef6\u7ba1\u7406 : \u4f7f\u7528\u65b0\u7684\u7684CRD pluginmanager/envoyplugin\u5305\u88c5\u4e86\u53ef\u8bfb\u6027\uff0c\u53ef\u7ef4\u62a4\u6027\u5dee\u7684envoyfilter,\u4f7f\u5f97\u63d2\u4ef6\u6269\u5c55\u66f4\u4e3a\u4fbf\u6377 \u81ea\u9002\u5e94\u9650\u6d41 : \u5b9e\u73b0\u4e86\u672c\u5730\u9650\u6d41\uff0c\u540c\u65f6\u53ef\u4ee5\u7ed3\u5408\u76d1\u63a7\u4fe1\u606f\u81ea\u52a8\u8c03\u6574\u9650\u6d41\u7b56\u7565 \u9009\u62e9\u4f60\u611f\u5174\u8da3\u7684\u6a21\u5757\u5feb\u901f\u5f00\u59cb\u5427~","title":"\u7b80\u4ecb"},{"location":"reference/","text":"ServiceFence /* * @Author: yangdihang * @Date: 2020/5/21 */ syntax = proto3 ; package netease.microservice.v1alpha1; option go_package = yun.netease.com/slime/pkg/apis/microservice/v1alpha1 ; // ServiceFence\u662f\u5728\u793e\u533aSidecar\u8d44\u6e90\u4e4b\u4e0a\u7684\u4e00\u5c42\u5c01\u88c5\uff0c\u5176\u4e3b\u8981\u4f5c\u7528\u4e0eSidecar\u8d44\u6e90\u76f8\u540c\uff0c\u53ef\u4ee5\u9694\u7edd\u670d\u52a1 // \u6240\u4e0d\u5173\u5fc3\u7684\u914d\u7f6e\uff0c\u4ece\u800c\u63d0\u5347\u5927\u89c4\u6a21\u573a\u666f\u4e0b\u670d\u52a1\u7f51\u683c\u7684\u6027\u80fd\u3002\u4e0eSidecar\u8d44\u6e90\u4e0d\u540c\u7684\u662f\uff0cServiceFence // \u4f1a\u6839\u636eVirtualService\u8d44\u6e90\u7684\u53d8\u5316\u8c03\u6574\u56f4\u680f\u7b56\u7565\u3002 // \u8003\u8651\u5982\u4e0b\u573a\u666f\uff1a // apiVersion: networking.istio.io/v1alpha3 // kind: VirtualService // metadata: // # name\u548cnamespace\u9700\u8981\u548c\u6240\u5c5e\u670d\u52a1\u4e00\u4e00\u5bf9\u5e94 // name: a // namespace: test1 // spec: // host: // - b.test1.svc.cluster.local // http: // - route: // - destination: // host: c.test1.svc.cluster.local // // \u5047\u5982\u6b64\u65f6\uff0cSidecar\u8d44\u6e90\u53ea\u8003\u8651\u4e86a-- b\u7684\u670d\u52a1\u8c03\u7528\uff0c\u90a3\u4e48\u5982\u4e0a\u7684\u8def\u7531\u914d\u7f6e\u5c06\u4f1a\u51fa\u73b0503,\u539f\u56e0\u662fc\u5bf9\u4e8ea\u800c\u8a00\u4e0d\u53ef\u8fbe\uff0c // \u5bf9\u4e8e\u4f7f\u7528\u8005\u800c\u8a00\u914d\u7f6e\u8def\u7531\u89c4\u5219\u65f6\u8fd8\u8981\u8003\u8651Sidecar\u8d44\u6e90\u7684\u914d\u7f6e\uff0c\u8fd9\u663e\u7136\u4e0d\u5408\u9002\u3002ServiceFence\u4f1a\u6839\u636e // VirtualService\u5bf9\u5e94\u7684\u4fee\u6539Sidecar\u914d\u7f6e // \u4f8b\u5982\uff1a // apiVersion: microservice.netease.com/v1alpha1 // kind: ServiceFence // metadata: // # name\u548cnamespace\u9700\u8981\u548c\u6240\u5c5e\u670d\u52a1\u4e00\u4e00\u5bf9\u5e94 // name: a // namespace: test1 // spec: // host: // b.test1.svc.cluster.local: // stable: {} // // \u8be5\u914d\u7f6e\u7ecf\u8fc7operator\u8ba1\u7b97\u540e\uff0c\u5176\u72b6\u6001\u4f1a\u6539\u53d8\u4e3a\uff1a // apiVersion: microservice.netease.com/v1alpha1 // kind: ServiceFence // metadata: // # name\u548cnamespace\u9700\u8981\u548c\u6240\u5c5e\u670d\u52a1\u4e00\u4e00\u5bf9\u5e94 // name: a // namespace: test1 // spec: // host: // b.test1.svc.cluster.local: // stable: {} // status: // domains: // b.test1.svc.cluster.local: // hosts: // - b.test1.svc.cluster.local // - c.test1.svc.cluster.local // status: ACTIVE // // \u4e5f\u53ef\u4ee5\u5229\u7528ServiceFence\u7ba1\u7406\u9694\u79bb\u914d\u7f6e\u7684\u751f\u547d\u5468\u671f\uff0cServiceFence\u6709\u4e09\u79cd\u8bb0\u5f55\u7b56\u7565\uff1a // 1. stable\uff0c\u7a33\u5b9a\u7684\u914d\u7f6e\uff0c\u7528\u6237\u624b\u52a8\u56de\u6536\u914d\u7f6e // 2. deadline\uff0c \u5230\u671f\u56de\u6536 // 3. auto\uff0c \u6839\u636e\u670d\u52a1\u6389\u7528\u60c5\u51b5\u81ea\u52a8\u56de\u6536 message Timestamp { // Represents seconds of UTC time since Unix epoch // 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to // 9999-12-31T23:59:59Z inclusive. int64 seconds = 1; // Non-negative fractions of a second at nanosecond resolution. Negative // second values with fractions must still have non-negative nanos values // that count forward in time. Must be from 0 to 999,999,999 // inclusive. int32 nanos = 2; } message ServiceFenceSpec { // \u8bbf\u95ee\u7684\u670d\u52a1\u4ee5\u53ca\u5176\u56de\u6536\u7b56\u7565 map string, RecyclingStrategy host = 1; bool enable = 2; } message RecyclingStrategy { message Stable { } message Deadline { Timestamp expire = 1; } message Auto { Timestamp duration = 1; } // \u6c38\u4e45\u5b58\u5728\u7684\u914d\u7f6e Stable stable = 1; // \u5230\u671f\u5931\u6548 Deadline deadline = 2; // \u5f53\u6700\u8fd1\u4e00\u6b21\u8bbf\u95ee\u65f6\u95f4\u5927\u4e8eduration\u65f6\uff0c\u5c06\u5176\u72b6\u6001\u6539\u53d8\u4e3a\u5931\u6548 Auto auto = 3; Timestamp RecentlyCalled = 4; } message Destinations { // \u8bb0\u5f55\u6700\u8fd1\u4e00\u6b21\u8c03\u7528\uff0c\u5f53\u5931\u6548\u7b56\u7565\u4e3aauto\u65f6\uff0c\u9700\u5b9a\u671f\u5237\u65b0\u8be5\u503c Timestamp RecentlyCalled = 1; // domain\u5bf9\u5e94\u7684\u4e0a\u6e38\u670d\u52a1 repeated string hosts = 2; enum Status { ACTIVE = 0; EXPIRE = 1; } Status status = 3; } message ServiceFenceStatus { map string, Destinations domains = 1; map string, bool visitor = 2; } PluginManager: /* * @Author: yangdihang * @Date: 2020/5/21 */ syntax = proto3 ; // PluginManager \u7528\u4e8e\u7ba1\u7406\u63d2\u4ef6\uff0c\u4ee5\u53ca\u63d2\u4ef6\u5728\u5168\u5c40\u7ef4\u5ea6\u4e0a\u7684\u914d\u7f6e\uff0cenable\u9009\u9879\u53ef\u4ee5\u542f\u7528\u6216\u7981\u7528\u67d0\u63d2\u4ef6 // \u793a\u4f8b\u5982\u4e0b\uff1a // apiVersion: microservice.netease.com/v1alpha1 // kind: PluginManager // metadata: // name: gw-cluster-gateway-proxy // namespace: gateway-system // spec: // plugin: // - enable: true // name: envoy.cors // - enable: true // name: envoy.fault // - enable: true // name: com.netease.iprestriction // - enable: true // name: com.netease.transformation // - enable: false // name: com.netease.resty // - enable: true // name: com.netease.metadatahub // - enable: true // name: com.netease.supercache // inline: // settings: // apis_prefix: testremove // used_caches: // local: {} // redis: // general: // host: 10.107.16.138 // port: 6379 // timeout: 100 // workloadLabels: // gw_cluster: gateway-proxy import google/protobuf/struct.proto ; package netease.microservice.v1alpha1; option go_package = yun.netease.com/slime/pkg/apis/microservice/v1alpha1 ; message PluginManager { // Zero or more labels that indicate a specific set of pods/VMs whose // proxies should be configured to use these additional filters. The // scope of label search is platform dependent. On Kubernetes, for // example, the scope includes pods running in all reachable // namespaces. Omitting the selector applies the filter to all proxies in // the mesh. map string, string workload_labels = 1; repeated Plugin plugin = 2; // Names of gateways where the rule should be applied to. Gateway names // at the top of the VirtualService (if any) are overridden. The gateway // match is independent of sourceLabels. repeated string gateways = 3; } message Plugin { bool enable = 1; string name = 2; google.protobuf.Struct settings = 3; enum ListenerType { Outbound = 0; Inbound = 1; } ListenerType listenerType = 4; string type_url = 5; oneof plugin_settings { Wasm wasm = 6; Inline inline = 7; } } message Wasm { string rootID = 1; string fileName = 2; google.protobuf.Struct settings = 3; } message Inline { google.protobuf.Struct settings = 1; } EnvoyPlugin /* * @Author: yangdihang * @Date: 2020/5/21 */ syntax = proto3 ; // EnvoyPlugin \u7528\u4e8e\u8bbe\u7f6e\u7f51\u5173\u6269\u5c55\u63d2\u4ef6\u914d\u7f6e\uff0c\u914d\u7f6e\u751f\u6548\u8303\u56f4\u67093\u4e2a\u7ea7\u522b // route\u7ea7\u522b\uff0c\u5bf9\u5e94\u540c\u4e00route name\u4e0b\u7684\u8def\u7531\u89c4\u5219 // host\u7ea7\u522b\uff0c\u5bf9\u5e94\u540c\u4e00host\u4e0b\u7684\u8def\u7531\u89c4\u5219 // \u793a\u4f8b\u5982\u4e0b\uff1a // apiVersion: microservice.netease.com/v1alpha1 // kind: EnvoyPlugin // metadata: // name: project1-3-458-rewrite // spec: // gateway: // - gateway-proxy-1 // host: // - 103.196.65.178 // plugins: // - name: com.netease.rewrite // settings: // request_transformations: // - conditions: // - headers: // - name: :path // regex_match: /aaaaaaa/(.*) // transformation_template: // extractors: // userpath : // header: :path // regex: /aaaaaaa/(.*) // subgroup: 1 // headers: // :path: // text: /{{userpath}} // parse_body_behavior: DontParse import pkg/apis/microservice/v1alpha1/plugin_manager.proto ; package netease.microservice.v1alpha1; option go_package = yun.netease.com/slime/pkg/apis/microservice/v1alpha1 ; message WorkloadSelector { // One or more labels that indicate a specific set of pods/VMs // on which the configuration should be applied. The scope of // label search is restricted to the configuration namespace in which the // the resource is present. map string, string labels = 1; } message EnvoyPlugin { map string, string workload_labels = 9; // route level plugin repeated string route = 1; // host level plugin repeated string host = 2; // service level plugin repeated string service = 3; repeated Plugin plugins = 4; // which gateway should use this plugin setting repeated string gateway = 5; // which user should use this plugin setting repeated string user = 6; // group setting \u7528\u4e8e\u8def\u7531\u7ec4\u7ea7\u522b\u7684\u914d\u7f6e\u8bbe\u7f6e\uff0c\u5176\u4f18\u5148\u7ea7\u4f4e\u4e8e\u8def\u7531\u7ea7\u522b\u7684\u914d\u7f6e bool isGroupSetting = 7; message Listener { uint32 port = 1; bool outbound = 2; } // listener level repeated Listener listener = 8; } SmartLimiter /* * @Author: yangdihang * @Date: 2020/5/21 */ syntax = proto3 ; import google/protobuf/duration.proto ; package netease.microservice.v1alpha1; option go_package = yun.netease.com/slime/pkg/apis/microservice/v1alpha1 ; // SmartLimiter \u7528\u4e8e\u914d\u7f6e\u81ea\u9002\u5e94\u9650\u6d41\u63d2\u4ef6\uff0c\u4ee5\u53ca\u63d2\u4ef6\u5728\u5168\u5c40\u7ef4\u5ea6\u4e0a\u7684\u914d\u7f6e\uff0cenable\u9009\u9879\u53ef\u4ee5\u542f\u7528\u6216\u7981\u7528\u67d0\u63d2\u4ef6 // \u793a\u4f8b\u5982\u4e0b\uff1a // apiVersion: microservice.netease.com/v1alpha1 // kind: SmartLimiter // metadata: // name: a // namespace: powerful // spec: // descriptors: // - action: // fill_interval: // seconds: 60 // quota: 30/{pod} // condition: true message Action { string quota = 1; google.protobuf.Duration fill_interval = 2; } message ActionStatus { uint32 quota = 1; google.protobuf.Duration fill_interval = 2; } message SmartLimitDescriptor { string condition = 2; Action action = 3; repeated HeaderMatcher match = 4; } message SmartLimitDescriptorStatus { string condition = 2; ActionStatus action = 3; repeated HeaderMatcher match = 4; } message SmartLimiterSpec { string domain = 1; repeated SmartLimitDescriptor descriptors = 2; } message SmartLimiterStatus { repeated SmartLimitDescriptor ratelimitStatus = 1; map string, string endPointStatus = 2; message ServiceStatus { map string, string selector = 1; message Listener { string name = 1; uint32 port = 2; } repeated Listener listener = 2; } ServiceStatus serviceStatus = 3; } message HeaderMatcher { string name = 1; string exact_match = 2; string regex_match = 3; bool present_match = 7; string prefix_match = 9; string suffix_match = 10; bool invert_match = 8; }","title":"\u63a5\u53e3\u53c2\u8003"},{"location":"reference/#servicefence","text":"/* * @Author: yangdihang * @Date: 2020/5/21 */ syntax = proto3 ; package netease.microservice.v1alpha1; option go_package = yun.netease.com/slime/pkg/apis/microservice/v1alpha1 ; // ServiceFence\u662f\u5728\u793e\u533aSidecar\u8d44\u6e90\u4e4b\u4e0a\u7684\u4e00\u5c42\u5c01\u88c5\uff0c\u5176\u4e3b\u8981\u4f5c\u7528\u4e0eSidecar\u8d44\u6e90\u76f8\u540c\uff0c\u53ef\u4ee5\u9694\u7edd\u670d\u52a1 // \u6240\u4e0d\u5173\u5fc3\u7684\u914d\u7f6e\uff0c\u4ece\u800c\u63d0\u5347\u5927\u89c4\u6a21\u573a\u666f\u4e0b\u670d\u52a1\u7f51\u683c\u7684\u6027\u80fd\u3002\u4e0eSidecar\u8d44\u6e90\u4e0d\u540c\u7684\u662f\uff0cServiceFence // \u4f1a\u6839\u636eVirtualService\u8d44\u6e90\u7684\u53d8\u5316\u8c03\u6574\u56f4\u680f\u7b56\u7565\u3002 // \u8003\u8651\u5982\u4e0b\u573a\u666f\uff1a // apiVersion: networking.istio.io/v1alpha3 // kind: VirtualService // metadata: // # name\u548cnamespace\u9700\u8981\u548c\u6240\u5c5e\u670d\u52a1\u4e00\u4e00\u5bf9\u5e94 // name: a // namespace: test1 // spec: // host: // - b.test1.svc.cluster.local // http: // - route: // - destination: // host: c.test1.svc.cluster.local // // \u5047\u5982\u6b64\u65f6\uff0cSidecar\u8d44\u6e90\u53ea\u8003\u8651\u4e86a-- b\u7684\u670d\u52a1\u8c03\u7528\uff0c\u90a3\u4e48\u5982\u4e0a\u7684\u8def\u7531\u914d\u7f6e\u5c06\u4f1a\u51fa\u73b0503,\u539f\u56e0\u662fc\u5bf9\u4e8ea\u800c\u8a00\u4e0d\u53ef\u8fbe\uff0c // \u5bf9\u4e8e\u4f7f\u7528\u8005\u800c\u8a00\u914d\u7f6e\u8def\u7531\u89c4\u5219\u65f6\u8fd8\u8981\u8003\u8651Sidecar\u8d44\u6e90\u7684\u914d\u7f6e\uff0c\u8fd9\u663e\u7136\u4e0d\u5408\u9002\u3002ServiceFence\u4f1a\u6839\u636e // VirtualService\u5bf9\u5e94\u7684\u4fee\u6539Sidecar\u914d\u7f6e // \u4f8b\u5982\uff1a // apiVersion: microservice.netease.com/v1alpha1 // kind: ServiceFence // metadata: // # name\u548cnamespace\u9700\u8981\u548c\u6240\u5c5e\u670d\u52a1\u4e00\u4e00\u5bf9\u5e94 // name: a // namespace: test1 // spec: // host: // b.test1.svc.cluster.local: // stable: {} // // \u8be5\u914d\u7f6e\u7ecf\u8fc7operator\u8ba1\u7b97\u540e\uff0c\u5176\u72b6\u6001\u4f1a\u6539\u53d8\u4e3a\uff1a // apiVersion: microservice.netease.com/v1alpha1 // kind: ServiceFence // metadata: // # name\u548cnamespace\u9700\u8981\u548c\u6240\u5c5e\u670d\u52a1\u4e00\u4e00\u5bf9\u5e94 // name: a // namespace: test1 // spec: // host: // b.test1.svc.cluster.local: // stable: {} // status: // domains: // b.test1.svc.cluster.local: // hosts: // - b.test1.svc.cluster.local // - c.test1.svc.cluster.local // status: ACTIVE // // \u4e5f\u53ef\u4ee5\u5229\u7528ServiceFence\u7ba1\u7406\u9694\u79bb\u914d\u7f6e\u7684\u751f\u547d\u5468\u671f\uff0cServiceFence\u6709\u4e09\u79cd\u8bb0\u5f55\u7b56\u7565\uff1a // 1. stable\uff0c\u7a33\u5b9a\u7684\u914d\u7f6e\uff0c\u7528\u6237\u624b\u52a8\u56de\u6536\u914d\u7f6e // 2. deadline\uff0c \u5230\u671f\u56de\u6536 // 3. auto\uff0c \u6839\u636e\u670d\u52a1\u6389\u7528\u60c5\u51b5\u81ea\u52a8\u56de\u6536 message Timestamp { // Represents seconds of UTC time since Unix epoch // 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to // 9999-12-31T23:59:59Z inclusive. int64 seconds = 1; // Non-negative fractions of a second at nanosecond resolution. Negative // second values with fractions must still have non-negative nanos values // that count forward in time. Must be from 0 to 999,999,999 // inclusive. int32 nanos = 2; } message ServiceFenceSpec { // \u8bbf\u95ee\u7684\u670d\u52a1\u4ee5\u53ca\u5176\u56de\u6536\u7b56\u7565 map string, RecyclingStrategy host = 1; bool enable = 2; } message RecyclingStrategy { message Stable { } message Deadline { Timestamp expire = 1; } message Auto { Timestamp duration = 1; } // \u6c38\u4e45\u5b58\u5728\u7684\u914d\u7f6e Stable stable = 1; // \u5230\u671f\u5931\u6548 Deadline deadline = 2; // \u5f53\u6700\u8fd1\u4e00\u6b21\u8bbf\u95ee\u65f6\u95f4\u5927\u4e8eduration\u65f6\uff0c\u5c06\u5176\u72b6\u6001\u6539\u53d8\u4e3a\u5931\u6548 Auto auto = 3; Timestamp RecentlyCalled = 4; } message Destinations { // \u8bb0\u5f55\u6700\u8fd1\u4e00\u6b21\u8c03\u7528\uff0c\u5f53\u5931\u6548\u7b56\u7565\u4e3aauto\u65f6\uff0c\u9700\u5b9a\u671f\u5237\u65b0\u8be5\u503c Timestamp RecentlyCalled = 1; // domain\u5bf9\u5e94\u7684\u4e0a\u6e38\u670d\u52a1 repeated string hosts = 2; enum Status { ACTIVE = 0; EXPIRE = 1; } Status status = 3; } message ServiceFenceStatus { map string, Destinations domains = 1; map string, bool visitor = 2; } PluginManager: /* * @Author: yangdihang * @Date: 2020/5/21 */ syntax = proto3 ; // PluginManager \u7528\u4e8e\u7ba1\u7406\u63d2\u4ef6\uff0c\u4ee5\u53ca\u63d2\u4ef6\u5728\u5168\u5c40\u7ef4\u5ea6\u4e0a\u7684\u914d\u7f6e\uff0cenable\u9009\u9879\u53ef\u4ee5\u542f\u7528\u6216\u7981\u7528\u67d0\u63d2\u4ef6 // \u793a\u4f8b\u5982\u4e0b\uff1a // apiVersion: microservice.netease.com/v1alpha1 // kind: PluginManager // metadata: // name: gw-cluster-gateway-proxy // namespace: gateway-system // spec: // plugin: // - enable: true // name: envoy.cors // - enable: true // name: envoy.fault // - enable: true // name: com.netease.iprestriction // - enable: true // name: com.netease.transformation // - enable: false // name: com.netease.resty // - enable: true // name: com.netease.metadatahub // - enable: true // name: com.netease.supercache // inline: // settings: // apis_prefix: testremove // used_caches: // local: {} // redis: // general: // host: 10.107.16.138 // port: 6379 // timeout: 100 // workloadLabels: // gw_cluster: gateway-proxy import google/protobuf/struct.proto ; package netease.microservice.v1alpha1; option go_package = yun.netease.com/slime/pkg/apis/microservice/v1alpha1 ; message PluginManager { // Zero or more labels that indicate a specific set of pods/VMs whose // proxies should be configured to use these additional filters. The // scope of label search is platform dependent. On Kubernetes, for // example, the scope includes pods running in all reachable // namespaces. Omitting the selector applies the filter to all proxies in // the mesh. map string, string workload_labels = 1; repeated Plugin plugin = 2; // Names of gateways where the rule should be applied to. Gateway names // at the top of the VirtualService (if any) are overridden. The gateway // match is independent of sourceLabels. repeated string gateways = 3; } message Plugin { bool enable = 1; string name = 2; google.protobuf.Struct settings = 3; enum ListenerType { Outbound = 0; Inbound = 1; } ListenerType listenerType = 4; string type_url = 5; oneof plugin_settings { Wasm wasm = 6; Inline inline = 7; } } message Wasm { string rootID = 1; string fileName = 2; google.protobuf.Struct settings = 3; } message Inline { google.protobuf.Struct settings = 1; }","title":"ServiceFence"},{"location":"reference/#envoyplugin","text":"/* * @Author: yangdihang * @Date: 2020/5/21 */ syntax = proto3 ; // EnvoyPlugin \u7528\u4e8e\u8bbe\u7f6e\u7f51\u5173\u6269\u5c55\u63d2\u4ef6\u914d\u7f6e\uff0c\u914d\u7f6e\u751f\u6548\u8303\u56f4\u67093\u4e2a\u7ea7\u522b // route\u7ea7\u522b\uff0c\u5bf9\u5e94\u540c\u4e00route name\u4e0b\u7684\u8def\u7531\u89c4\u5219 // host\u7ea7\u522b\uff0c\u5bf9\u5e94\u540c\u4e00host\u4e0b\u7684\u8def\u7531\u89c4\u5219 // \u793a\u4f8b\u5982\u4e0b\uff1a // apiVersion: microservice.netease.com/v1alpha1 // kind: EnvoyPlugin // metadata: // name: project1-3-458-rewrite // spec: // gateway: // - gateway-proxy-1 // host: // - 103.196.65.178 // plugins: // - name: com.netease.rewrite // settings: // request_transformations: // - conditions: // - headers: // - name: :path // regex_match: /aaaaaaa/(.*) // transformation_template: // extractors: // userpath : // header: :path // regex: /aaaaaaa/(.*) // subgroup: 1 // headers: // :path: // text: /{{userpath}} // parse_body_behavior: DontParse import pkg/apis/microservice/v1alpha1/plugin_manager.proto ; package netease.microservice.v1alpha1; option go_package = yun.netease.com/slime/pkg/apis/microservice/v1alpha1 ; message WorkloadSelector { // One or more labels that indicate a specific set of pods/VMs // on which the configuration should be applied. The scope of // label search is restricted to the configuration namespace in which the // the resource is present. map string, string labels = 1; } message EnvoyPlugin { map string, string workload_labels = 9; // route level plugin repeated string route = 1; // host level plugin repeated string host = 2; // service level plugin repeated string service = 3; repeated Plugin plugins = 4; // which gateway should use this plugin setting repeated string gateway = 5; // which user should use this plugin setting repeated string user = 6; // group setting \u7528\u4e8e\u8def\u7531\u7ec4\u7ea7\u522b\u7684\u914d\u7f6e\u8bbe\u7f6e\uff0c\u5176\u4f18\u5148\u7ea7\u4f4e\u4e8e\u8def\u7531\u7ea7\u522b\u7684\u914d\u7f6e bool isGroupSetting = 7; message Listener { uint32 port = 1; bool outbound = 2; } // listener level repeated Listener listener = 8; }","title":"EnvoyPlugin"},{"location":"reference/#smartlimiter","text":"/* * @Author: yangdihang * @Date: 2020/5/21 */ syntax = proto3 ; import google/protobuf/duration.proto ; package netease.microservice.v1alpha1; option go_package = yun.netease.com/slime/pkg/apis/microservice/v1alpha1 ; // SmartLimiter \u7528\u4e8e\u914d\u7f6e\u81ea\u9002\u5e94\u9650\u6d41\u63d2\u4ef6\uff0c\u4ee5\u53ca\u63d2\u4ef6\u5728\u5168\u5c40\u7ef4\u5ea6\u4e0a\u7684\u914d\u7f6e\uff0cenable\u9009\u9879\u53ef\u4ee5\u542f\u7528\u6216\u7981\u7528\u67d0\u63d2\u4ef6 // \u793a\u4f8b\u5982\u4e0b\uff1a // apiVersion: microservice.netease.com/v1alpha1 // kind: SmartLimiter // metadata: // name: a // namespace: powerful // spec: // descriptors: // - action: // fill_interval: // seconds: 60 // quota: 30/{pod} // condition: true message Action { string quota = 1; google.protobuf.Duration fill_interval = 2; } message ActionStatus { uint32 quota = 1; google.protobuf.Duration fill_interval = 2; } message SmartLimitDescriptor { string condition = 2; Action action = 3; repeated HeaderMatcher match = 4; } message SmartLimitDescriptorStatus { string condition = 2; ActionStatus action = 3; repeated HeaderMatcher match = 4; } message SmartLimiterSpec { string domain = 1; repeated SmartLimitDescriptor descriptors = 2; } message SmartLimiterStatus { repeated SmartLimitDescriptor ratelimitStatus = 1; map string, string endPointStatus = 2; message ServiceStatus { map string, string selector = 1; message Listener { string name = 1; uint32 port = 2; } repeated Listener listener = 2; } ServiceStatus serviceStatus = 3; } message HeaderMatcher { string name = 1; string exact_match = 2; string regex_match = 3; bool present_match = 7; string prefix_match = 9; string suffix_match = 10; bool invert_match = 8; }","title":"SmartLimiter"},{"location":"concept/lazyload/","text":"\u5728\u5b9e\u73b0\u914d\u7f6e\u61d2\u52a0\u8f7d\u4e4b\u524d\uff0c\u6211\u4eec\u56e2\u961f\u9047\u5230\u7684\u95ee\u9898\u662f\uff0c\u65b0\u4e0a\u7684\u5e94\u7528\u957f\u65f6\u95f4\u5904\u4e8eNot Ready\u72b6\u6001\uff0c\u89c2\u5bdfEnvoy\u65e5\u5fd7\u53d1\u73b0\u7531\u4e8e\u914d\u7f6e\u91cf\u592a\u5927\uff0c\u5bfc\u81f4\u5176\u4e00\u76f4\u5361\u5728\u521d\u59cb\u5316\u914d\u7f6e\u9636\u6bb5\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u8be2\u95ee\u4e86\u4e1a\u52a1\u65b9\uff0c\u8be5\u670d\u52a1\u6240\u9700\u4f9d\u8d56\u7684\u670d\u52a1\u6709\u54ea\u4e9b\uff0c\u5e76\u4e3a\u5176\u914d\u4e0a\u4e86Sidecar Scope\uff0cNot Ready\u7684\u65f6\u95f4\u7acb\u9a6c\u4ece\u5206\u949f\u7ea7\u964d\u5230\u4e86\u79d2\u7ea7\u3002\u4f46\u662f\u6bcf\u6b21\u4e1a\u52a1\u53d1\u5e03\u65f6\uff0c\u90fd\u4e3a\u5176\u624b\u52a8\u8fd0\u7ef4\u4e0d\u73b0\u5b9e\uff0c\u800c\u4e14\u670d\u52a1\u7684\u4f9d\u8d56\u5173\u7cfb\u5f88\u6709\u53ef\u80fd\u5728\u8fd0\u884c\u9636\u6bb5\u53d1\u751f\u6539\u53d8\u3002\u5982\u4f55\u81ea\u52a8\u7684\u8fd9\u4e2a\u4f9d\u8d56\u5173\u7cfb\u6210\u4e3a\u8fd9\u4e2a\u95ee\u9898\u7684\u5173\u952e\u3002 \u6211\u4eec\u9996\u5148\u60f3\u5230\u7684\u662f\u4ece\u670d\u52a1\u62d3\u6251\u56fe\u4e2d\u83b7\u53d6\u8be5\u4fe1\u606f\uff0c\u4f46\u662f\u53ea\u6709\u8bbf\u95ee\u6210\u529f\u4e86\u624d\u4f1a\u751f\u6210\u62d3\u6251\u56fe\uff0c\u6362\u800c\u8a00\u4e4b\uff0c\u914d\u7f6e\u61d2\u52a0\u8f7d\u4f9d\u8d56\u62d3\u6251\u56fe\uff0c\u800c\u62d3\u6251\u56fe\u7684\u751f\u6210\u53c8\u4f9d\u8d56\u8c03\u7528\u65b9\u80fd\u83b7\u5f97\u88ab\u8c03\u7528\u65b9\u7684\u4fe1\u606f\u3002\u8fd9\u65e0\u7591\u662f\u4e00\u4e2a\u9e21\u751f\u86cb\u8fd8\u662f\u86cb\u751f\u9e21\u7684\u95ee\u9898\u3002\u6709\u4ec0\u4e48\u529e\u6cd5\u53ef\u4ee5\u4f7f\u5f97\u8c03\u7528\u65b9\u5728\u4e0d\u77e5\u9053\u88ab\u8c03\u7528\u65b9\u4fe1\u606f\u65f6\u4f9d\u7136\u80fd\u591f\u8bbf\u95ee\u6210\u529f\uff0c\u6210\u4e3a\u4e86\u6253\u7834\u9e21\u86cb\u6096\u8bba\u7684\u5173\u952e\u3002 \u6211\u4eec\u60f3\u5230\u7684\u529e\u6cd5\u662f\u5f15\u5165\u53e6\u4e00\u4e2asidecar\uff0c\u867d\u7136\u79f0\u4f5csidecar\uff0c\u4f46\u5b83\u66f4\u50cf\u662f\u4e00\u4e2asidebus\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u5168\u5c40\u5171\u4eab\u7684sidecar\uff0c\u62e5\u6709\u5168\u91cf\u7684\u914d\u7f6e\u548c\u670d\u52a1\u53d1\u73b0\u4fe1\u606f\u3002\u4e3a\u4e86\u4f7f\u8c03\u7528\u65b9\u5728\u4e0d\u77e5\u9053\u88ab\u8c03\u7528\u65b9\u4fe1\u606f\u65f6\u4e5f\u80fd\u8bbf\u95ee\u88ab\u8c03\u7528\u65b9\uff0c\u8fd8\u9700\u8981\u5c06\u539f\u6709\u7684\u515c\u5e95\u8def\u7531\u66ff\u6362\u4e3a\u6307\u5411global-sidecar\u7684\u3002 \u6309\u7167\u914d\u7f6e\u6309\u9700\u52a0\u8f7d\u7684\u601d\u8def\uff0c\u4e00\u5f00\u59cb\u4f1a\u4e3a\u670d\u52a1\u914d\u7f6e\u4e00\u4e2a\u4e0d\u5305\u542b\u4efb\u4f55\u670d\u52a1\u4fe1\u606f\u7684ServiceFence\u3002\u5f53\u670d\u52a1\u8c03\u7528Fence\u4e4b\u5916\u7684\u670d\u52a1\u65f6\uff0c\u9996\u5148\u4f1a\u547d\u4e2d\u515c\u5e95\u89c4\u5219\uff0c\u88ab\u5bfc\u6d41\u5230global-sidecar\uff0cglobal-sidecar\u4f1a\u6839\u636e\u76f8\u5e94\u7684\u89c4\u5219\u8bbf\u95ee\u88ab\u8c03\u7528\u65b9\uff0c\u540c\u65f6\u8fd9\u4e00\u8c03\u7528\u5173\u7cfb\u4e5f\u88abglobal-sidecar\u4e0a\u62a5\u7ed9report-server\u3002 ServiceFence\u53ef\u4ee5\u770b\u4f5c\u662f\u9488\u5bf9\u67d0\u4e00\u670d\u52a1\u7684Sidecar\u8d44\u6e90\uff0c\u533a\u522b\u662fServiceFence\u4e0d\u4ec5\u4f1a\u6839\u636e\u4f9d\u8d56\u5173\u7cfb\u751f\u6210Sidecar\u8d44\u6e90\uff0c\u540c\u65f6\u4f1a\u6839\u636eVirtualService\u89c4\u5219\u5224\u65ad\u670d\u52a1\u7684\u771f\u5b9e\u540e\u7aef\uff0c\u5e76\u81ea\u52a8\u6269\u5927Fence\u7684\u8303\u56f4\u3002\u4f8b\u5982\uff0cc.default.svc.cluster.local\u5728fence\u4e2d\uff0c\u6b64\u65f6\u6709\u4e00\u6761\u8def\u7531\u89c4\u5219\u7684host\u4e3ac.default.svc.cluster.local\uff0c\u5176destinatoin\u4e3ad.default.svc.cluster.local\uff0c\u90a3\u4e48d\u670d\u52a1\u4e5f\u4f1a\u88ab\u81ea\u52a8\u6269\u5145\u5230Fence\u4e2d\u3002 \u542f\u7528\u548c\u505c\u7528\u914d\u7f6e\u61d2\u52a0\u8f7d\u529f\u80fd\u4e5f\u5341\u5206\u7b80\u5355\uff0c\u4f7f\u7528\u8005\u65e0\u9700\u5173\u5fc3\u5e95\u5c42\u7684ServiceFence\u4ee5\u53caSidecar\u8d44\u6e90\uff0c\u53ea\u9700\u5728Service\u4e0a\u6253\u4e0a istio.dependency.servicefence/status: \"true\" \u7684\u6807\u7b7e\uff0c\u8868\u9762\u8be5\u670d\u52a1\u9700\u8981\u5f00\u542f\u914d\u7f6e\u61d2\u52a0\u8f7d\u7684\u6807\u7b7e\u5373\u53ef\u3002","title":"\u914d\u7f6e\u61d2\u52a0\u8f7d"},{"location":"concept/plugin/","text":"\u5728\u7f51\u5173\u573a\u666f\u4e0b\uff0c\u6d41\u91cf\u7ba1\u7406\u6bd4\u8f83\u590d\u6742\uff0c\u9700\u8981\u4f7f\u7528\u5b9a\u5236\u5316\u63d2\u4ef6\u6765\u5904\u7406\u6d41\u91cf\uff0c\u5728\u5f00\u53d1Slime\u7684\u63d2\u4ef6\u6a21\u5757\u4e4b\u524d\uff0c\u63d2\u4ef6\u6269\u5c55\u53ea\u80fd\u901a\u8fc7envoyfilter\u6765\u5b9e\u73b0\uff0cenvoyfilter\u662fxds\u5c42\u9762\u7684\u914d\u7f6e\uff0c\u7ba1\u7406\u548c\u7ef4\u62a4\u8fd9\u6837\u7684\u914d\u7f6e\u9700\u8981\u8017\u8d39\u5927\u91cf\u7684\u7cbe\u529b\uff0c\u540c\u65f6\u51fa\u9519\u7387\u4e5f\u6781\u9ad8\u3002 \u4e8e\u662f\u6211\u4eec\u51b3\u5b9a\u5728envoyfilter\u4e0a\u5c42\u505a\u4e00\u5c42\u9762\u5411\u63d2\u4ef6\u7ba1\u7406\u7684\u62bd\u8c61\u3002xds\u4e2d\u5173\u4e8eHTTP\u63d2\u4ef6\u7684\u914d\u7f6e\u6709\u4e24\u6bb5\uff0c\u4e00\u90e8\u5206\u5728LDS\u4e2d\uff0c\u4f5c\u4e3aHttpConnectionManager\u7684SubFilter\uff0c\u5b83\u51b3\u5b9a\u4e86\u54ea\u4e9b\u63d2\u4ef6\u5c06\u88ab\u52a0\u8f7d\u4ee5\u53ca\u63d2\u4ef6\u7684\u6267\u884c\u987a\u5e8f\u3002\u53e6\u4e00\u90e8\u5206\u5728RDS\u4e2d\u5e76\u4e14\u6709\u4e24\u4e2a\u7c92\u5ea6\uff0c\u5206\u522b\u662fvirtualHost\u7c92\u5ea6\u7684perFilterConfig\u4ee5\u53caroute\u7c92\u5ea6\u7684perFilterConfig\uff0c\u8fd9\u90e8\u5206\u51b3\u5b9a\u4e86\u5f53\u524dHost\u6216\u8005\u662f\u8def\u7531\u9700\u8981\u8fdb\u884c\u7684\u63d2\u4ef6\u884c\u4e3a\u3002 LDS\u4e2d\u7684\u90e8\u5206\u88ab\u6211\u4eec\u62bd\u8c61\u4e3aPluginManager\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7enable\u9009\u9879\u542f\u505c\u63d2\u4ef6\uff0c\u540c\u65f6\uff0c\u4e0d\u540c\u63d2\u4ef6\u5728PluginManager\u4e2d\u7684\u987a\u5e8f\u4e5f\u5bf9\u5e94\u7740\u63d2\u4ef6\u7684\u6267\u884c\u4f18\u5148\u7ea7\u3002\u800c\u4e14PluginManager\u4e0d\u4ec5\u53ef\u4ee5\u7ba1\u7406\u5185\u5efa\u7684c++\u63d2\u4ef6\u4e5f\u53ef\u4ee5\u7ba1\u7406wasm\u63d2\u4ef6\u3002 RDS\u4e2d\u7684\u90e8\u5206\u88ab\u62bd\u8c61\u4e3aEnvoyPlugin\uff0c\u901a\u8fc7EnvoyPlugin\u7684Host/Route\u5b57\u6bb5\u53ef\u4ee5\u8bbe\u7f6e\u63d2\u4ef6\u914d\u7f6e\u7684\u751f\u6548\u8303\u56f4\u3002EnvoyPlugin\u66f4\u52a0\u8d34\u5408\u7f51\u5173\u7684\u914d\u7f6e\u6a21\u578b\uff0c\u5728\u7f51\u5173\u7684\u63a7\u5236\u53f0\u4e0a\uff0c\u540e\u7aef\u670d\u52a1\u5f80\u5f80\u88ab\u6620\u5c04\u4e3a\u67d0\u4e2aHost\u4e0b\u7684\u67d0\u51e0\u4e2aAPI\u63a5\u53e3\uff0c\u4f8b\u5982\u6211\u4eec\u9700\u8981\u4e3a\u670d\u52a1A\u914d\u7f6e\u9ed1\u767d\u540d\u5355\u63d2\u4ef6\u4ee5\u53catrace\u91c7\u6837\u63d2\u4ef6\uff0cA\u670d\u52a1\u5728\u7f51\u5173\u4e0a\u7684\u63a5\u53e3\u4e3a /abc \u548c /xyz \uff0c\u9488\u5bf9\u8be5\u670d\u52a1\u7684\u63d2\u4ef6\u914d\u7f6e\u5c31\u4f1a\u88ab\u6620\u5c04\u4e3a\uff1a apiVersion: microservice.netease.com/v1alpha1 kind: EnvoyPlugin metadata: name: gateway-proxy-svc-a namespace: gateway-system spec: gateway: - gateway-system/gateway-proxy host: - gwtest.com route\uff1a - name: abc - name: xyz plugins: - name: com.netease.iprestriction settings: list: - 1.1.1.1 type: BLACK - name: com.netease.resty settings: plugins: - config: sample_rate: 0.001 whitelist: - aaa name: neTraceSample EnvoyPlugin\u4e0d\u5173\u5fc3\u6bcf\u4e2a\u63d2\u4ef6\u7684\u5177\u4f53\u914d\u7f6e\uff0c\u5177\u4f53\u914d\u7f6e\u4f1a\u88ab\u653e\u5728type.struct\u7ed3\u6784\u4e2d\u900f\u4f20\u5904\u7406\uff0c\u5b83\u66f4\u5173\u5fc3\u7684\u662f\u63d2\u4ef6\u751f\u6548\u8303\u56f4\uff0c\u4f7f\u7528\u8005\u53ef\u4ee5\u5c06\u63d2\u4ef6\u914d\u7f6e\u5728\u5176\u4ed6\u7ef4\u5ea6\u4e2d\u505a\u805a\u5408\uff08\u5c31\u50cf\u4f8b\u5b50\u4e2d\u4ee5Service\u7684\u7ef4\u5ea6\u505a\u805a\u5408\uff09\uff0c\u8fd9\u6837\u505a\u4e00\u65b9\u9762\u66f4\u52a0\u8d34\u5408\u63d2\u4ef6\u4f7f\u7528\u8005\u7684\u4e60\u60ef\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u964d\u4f4e\u4e86\u4e0a\u5c42\u914d\u7f6e\u7684\u5197\u4f59\uff0c\u4e0b\u56fe\u8868\u9762\u4e86EnvoyPluing\u5728xds\u5c42\u9762\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u867d\u7136xds\u5c42\u9762\u4ecd\u65e7\u4f1a\u5c55\u5f00\uff0c\u4f46\u81f3\u5c11\u5728\u7ba1\u7406\u5b83\u4eec\u7684\u65f6\u5019\u6211\u4eec\u9762\u5bf9\u7684\u662f\u4e00\u4e2a\u6709\u5e8f\u805a\u5408\u7684\u6570\u7ec4\u800c\u975e\u4e00\u9897\u5e9e\u5927\u7684\u63d2\u4ef6\u6811\uff1a","title":"HTTP\u63d2\u4ef6\u7ba1\u7406"},{"location":"concept/ratelimit/","text":"\u968f\u7740mixer\u7684\u79fb\u9664\uff0c\u8981\u5b9e\u73b0\u670d\u52a1\u7f51\u683c\u4e2d\u7684\u9650\u6d41\u53d8\u5f97\u975e\u5e38\u590d\u6742\u3002\u5168\u5c40\u9650\u6d41\u9700\u8981\u914d\u7f6e\u989d\u5916\u90e8\u7f72 RLS (Ratelimit Server)\uff0c\u5373\u4f7f\u662f\u672c\u5730\u9650\u6d41\u4e5f\u9700\u8981\u501f\u52a9envoy\u5185\u5efa\u63d2\u4ef6-- envoy.local.ratelimit\uff0c\u4e3a\u6b64\u4f7f\u7528\u8005\u4e0d\u5f97\u4e0d\u518d\u6b21\u9762\u5bf9\u590d\u6742\u7684EnvoyFilter\u914d\u7f6e\u3002\u76f8\u8f83\u4e8e\u4e8c\u4ee3\u5fae\u670d\u52a1\u6846\u67b6\u4e2d\u6210\u719f\u7684\u9650\u6d41\u7ec4\u4ef6\u800c\u8a00\uff0cenvoy\u7684\u672c\u5730\u9650\u6d41\u7ec4\u4ef6\u529f\u80fd\u4e5f\u7565\u663e\u7b80\u5355\uff0c\u4f8b\u5982\uff0c\u65e0\u6cd5\u505a\u5230\u81ea\u9002\u5e94\u9650\u6d41\uff0c\u53ea\u80fd\u4ee5\u5b9e\u4f8b\u7ef4\u5ea6\u914d\u7f6e\u9650\u6d41\u503c\u7b49\u3002 \u4e3a\u4e86\u89e3\u51b3istio\u4e2d\u670d\u52a1\u9650\u6d41\u7684\u77ed\u677f\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u81ea\u9002\u5e94\u9650\u6d41\u6a21\u5757\uff0c\u540c\u65f6\u5728\u6613\u7528\u6027\u65b9\u9762\uff0c\u6211\u4eec\u4e5f\u8bbe\u8ba1\u4e86\u4e00\u5957\u65b0\u7684API -- SmartLimiter\u3002\u5176\u4e3b\u4f53\u67b6\u6784\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u4e3aSmartLimiter\u5230EnvoyFilter\u7684\u8f6c\u6362\u903b\u8f91\uff0c\u53e6\u4e00\u90e8\u5206\u4e3a\u76d1\u63a7\u6570\u636e\u83b7\u53d6\u3002\u76ee\u524dslime\u652f\u6301\u4eceK8S metric\u83b7\u53d6\u670d\u52a1\u7684CPU\uff0cMemory\uff0c\u526f\u672c\u6570\u7b49\u6570\u636e\uff0c\u5f53\u7136\u6211\u4eec\u4e5f\u5bf9\u5916\u63d0\u4f9b\u4e86\u4e00\u5957\u76d1\u63a7\u6570\u636e\u5bf9\u63a5\u63a5\u53e3\uff08Metric Discovery Server\uff09\uff0c\u901a\u8fc7MDS\uff0c\u53ef\u4ee5\u5c06\u81ea\u5b9a\u4e49\u7684\u76d1\u63a7\u6307\u6807\u540c\u6b65\u7ed9\u9650\u6d41\u7ec4\u4ef6\u3002 SmartLimiter\u7684\u914d\u7f6e\u662f\u6bd4\u8f83\u63a5\u8fd1\u81ea\u7136\u8bed\u4e49\u7684\uff0c\u4f8b\u5982\u5e0c\u671b\u5728CPU\u8d85\u8fc780%\u65f6\u89e6\u53d1\u670d\u52a1A\u7684\u8bbf\u95ee\u9650\u5236\uff0c\u9650\u989d\u4e3a30qps\uff0c\u5bf9\u5e94\u7684SmartLimiter\u5b9a\u4e49\u5982\u4e0b\uff1a apiVersion: microservice.netease.com/v1alpha1 kind: SmartLimiter metadata: name: a namespace: default spec: descriptors: - action: fill_interval: seconds: 1 quota: 30/{pod} # 30\u4e3a\u8be5\u670d\u52a1\u7684\u989d\u5ea6\uff0c\u5c06\u5176\u5747\u5206\u7ed9\u6bcf\u4e2apod condition: {cpu} 0.8 # \u6839\u636e\u76d1\u63a7\u9879{cpu}\u7684\u503c\u81ea\u52a8\u586b\u5145\u8be5\u6a21\u677f \u6700\u7ec8\u4ea7\u751f\u7684\u9650\u6d41\u884c\u4e3a\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"\u81ea\u9002\u5e94\u9650\u6d41"},{"location":"getting_started/lazyload/","text":"","title":"\u914d\u7f6e\u61d2\u52a0\u8f7d"},{"location":"getting_started/plugin/","text":"\u4f7f\u7528Slime\u7684Http\u63d2\u4ef6\u7ba1\u7406\u529f\u80fd\u9700\u5728ConfigMap\u4e2d\u5f00\u542fPlugin\u6a21\u5757\uff1a { plugin : { enable : true } //... } \u5185\u5efa\u63d2\u4ef6 \u6ce8\u610f: envoy\u7684\u4e8c\u8fdb\u5236\u9700\u652f\u6301\u6269\u5c55\u63d2\u4ef6 \u6253\u5f00/\u505c\u7528 \u6309\u5982\u4e0b\u683c\u5f0f\u914d\u7f6ePluginManager\uff0c\u5373\u53ef\u6253\u5f00\u5185\u5efa\u63d2\u4ef6: apiVersion: microservice.netease.com/v1alpha1 kind: PluginManager metadata: name: my-plugin namespace: default spec: workload_labels: app: my-app plugins: - enable: true # \u63d2\u4ef6\u5f00\u5173 name: {plugin-1} # ... - enable: true name: {plugin-N} \u5176\u4e2d\uff0c{plugin-N}\u4e3a\u63d2\u4ef6\u540d\u79f0\uff0cPluginManager\u4e2d\u7684\u6392\u5e8f\u4e3a\u63d2\u4ef6\u6267\u884c\u987a\u5e8f\u3002 \u5c06enable\u5b57\u6bb5\u8bbe\u7f6e\u4e3afalse\u5373\u53ef\u505c\u7528\u63d2\u4ef6\u3002 \u5168\u5c40\u914d\u7f6e \u5168\u5c40\u914d\u7f6e\u5bf9\u5e94LDS\u4e2d\u7684\u63d2\u4ef6\u914d\u7f6e\uff0c\u6309\u5982\u4e0b\u683c\u5f0f\u8bbe\u7f6e\u5168\u5c40\u914d\u7f6e: apiVersion: microservice.netease.com/v1alpha1 kind: PluginManager metadata: name: my-plugin namespace: default spec: workload_labels: app: my-app plugins: - enable: true # \u63d2\u4ef6\u5f00\u5173 name: {plugin-1} # \u63d2\u4ef6\u540d\u79f0 inline: settings: {plugin settings} # \u63d2\u4ef6\u914d\u7f6e # ... - enable: true name: {plugin-N} Host/\u8def\u7531\u7ea7\u522b\u914d\u7f6e \u6309\u5982\u4e0b\u683c\u5f0f\u914d\u7f6eEnvoyPlugin: apiVersion: microservice.netease.com/v1alpha1 kind: EnvoyPlugin metadata: name: project1-abc namespace: gateway-system spec: workload_labels: app: my-app host: # \u63d2\u4ef6\u7684\u751f\u6548\u8303\u56f4(host\u7ea7\u522b) - jmeter.com - istio.com - 989.mock.qa.netease.com - demo.test.com - netease.com route: # \u63d2\u4ef6\u7684\u751f\u6548\u8303\u56f4(route\u7ea7\u522b), route\u5b57\u6bb5\u987b\u5bf9\u5e94VirtualService\u4e2d\u7684\u540d\u79f0 - abc plugins: - name: com.netease.supercache # \u63d2\u4ef6\u540d\u79f0 settings: # \u63d2\u4ef6\u914d\u7f6e cache_ttls: LocalHttpCache: default: 60000 enable_rpx: headers: - name: :status regex_match: 200| key_maker: exclude_host: false ignore_case: true low_level_fill: true \u6269\u5c55wasm\u63d2\u4ef6 // TODO \u793a\u4f8b // TODO","title":"HTTP\u63d2\u4ef6\u7ba1\u7406"},{"location":"getting_started/plugin/#_1","text":"\u6ce8\u610f: envoy\u7684\u4e8c\u8fdb\u5236\u9700\u652f\u6301\u6269\u5c55\u63d2\u4ef6 \u6253\u5f00/\u505c\u7528 \u6309\u5982\u4e0b\u683c\u5f0f\u914d\u7f6ePluginManager\uff0c\u5373\u53ef\u6253\u5f00\u5185\u5efa\u63d2\u4ef6: apiVersion: microservice.netease.com/v1alpha1 kind: PluginManager metadata: name: my-plugin namespace: default spec: workload_labels: app: my-app plugins: - enable: true # \u63d2\u4ef6\u5f00\u5173 name: {plugin-1} # ... - enable: true name: {plugin-N} \u5176\u4e2d\uff0c{plugin-N}\u4e3a\u63d2\u4ef6\u540d\u79f0\uff0cPluginManager\u4e2d\u7684\u6392\u5e8f\u4e3a\u63d2\u4ef6\u6267\u884c\u987a\u5e8f\u3002 \u5c06enable\u5b57\u6bb5\u8bbe\u7f6e\u4e3afalse\u5373\u53ef\u505c\u7528\u63d2\u4ef6\u3002 \u5168\u5c40\u914d\u7f6e \u5168\u5c40\u914d\u7f6e\u5bf9\u5e94LDS\u4e2d\u7684\u63d2\u4ef6\u914d\u7f6e\uff0c\u6309\u5982\u4e0b\u683c\u5f0f\u8bbe\u7f6e\u5168\u5c40\u914d\u7f6e: apiVersion: microservice.netease.com/v1alpha1 kind: PluginManager metadata: name: my-plugin namespace: default spec: workload_labels: app: my-app plugins: - enable: true # \u63d2\u4ef6\u5f00\u5173 name: {plugin-1} # \u63d2\u4ef6\u540d\u79f0 inline: settings: {plugin settings} # \u63d2\u4ef6\u914d\u7f6e # ... - enable: true name: {plugin-N} Host/\u8def\u7531\u7ea7\u522b\u914d\u7f6e \u6309\u5982\u4e0b\u683c\u5f0f\u914d\u7f6eEnvoyPlugin: apiVersion: microservice.netease.com/v1alpha1 kind: EnvoyPlugin metadata: name: project1-abc namespace: gateway-system spec: workload_labels: app: my-app host: # \u63d2\u4ef6\u7684\u751f\u6548\u8303\u56f4(host\u7ea7\u522b) - jmeter.com - istio.com - 989.mock.qa.netease.com - demo.test.com - netease.com route: # \u63d2\u4ef6\u7684\u751f\u6548\u8303\u56f4(route\u7ea7\u522b), route\u5b57\u6bb5\u987b\u5bf9\u5e94VirtualService\u4e2d\u7684\u540d\u79f0 - abc plugins: - name: com.netease.supercache # \u63d2\u4ef6\u540d\u79f0 settings: # \u63d2\u4ef6\u914d\u7f6e cache_ttls: LocalHttpCache: default: 60000 enable_rpx: headers: - name: :status regex_match: 200| key_maker: exclude_host: false ignore_case: true low_level_fill: true","title":"\u5185\u5efa\u63d2\u4ef6"},{"location":"getting_started/plugin/#wasm","text":"// TODO","title":"\u6269\u5c55wasm\u63d2\u4ef6"},{"location":"getting_started/plugin/#_2","text":"// TODO","title":"\u793a\u4f8b"},{"location":"getting_started/ratelimit/","text":"\u6ce8\u610f: \u81ea\u9002\u5e94\u9650\u6d41\u529f\u80fd\u53ef\u4ee5\u5bf9\u63a5envoy\u793e\u533a\u652f\u6301\u7684\u9650\u6d41\u63d2\u4ef6 envoy.filters.http.local_ratelimit \uff0c\u4e5f\u53ef\u4ee5\u5bf9\u63a5\u7f51\u6613\u81ea\u7814\u63d2\u4ef6 com.netease.local_flow_control \u3002envoy\u793e\u533a\u7684\u9650\u6d41\u63d2\u4ef6\u6682\u4e0d\u652f\u6301HeaderMatch\u7684\u914d\u7f6e\uff0c\u4f7f\u7528 com.netease.local_flow_control \u63d2\u4ef6\u524d\u9700\u786e\u8ba4envoy\u4e8c\u8fdb\u5236\u4e2d\u662f\u5426\u5305\u542b\u8be5\u63d2\u4ef6\u3002 \u7528\u6cd5\u4ecb\u7ecd \u4f7f\u7528Slime\u7684\u81ea\u9002\u5e94\u9650\u6d41\u529f\u80fd\u9700\u5728ConfigMap\u4e2d\u5f00\u542fRatlimit\u6a21\u5757\uff1a { ratelimit : { enable : true } //... } \u4f7f\u7528\u9650\u6d41\u529f\u80fd\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u4e3a\u76ee\u6807\u670d\u52a1\u5b9a\u4e49\u901a\u4e48\u7684SmartLimite\u8d44\u6e90\u5373\u53ef\uff0c\u5982\u4e0b\u6240\u793a\uff1a apiVersion: microservice.netease.com/v1alpha1 kind: SmartLimiter metadata: name: test-svc namespace: default spec: descriptors: - action: quota: 3 unit: 1 condition: true \u8fd9\u4efd\u914d\u7f6e\u53ef\u4ee5\u9650\u5236\u5e26\u6709 user=Bob \u7684\u5934\u7684\u8bf7\u6c42\u5bf9test-svc\u670d\u52a1\u4e2d\u5b9e\u4f8b\u7684\u8bbf\u95ee\uff0c\u9650\u6d41\u6b21\u6570\u4e3a\u6bcf\u79d23\u6b21\u3002\u5c06\u914d\u7f6e\u63d0\u4ea4\u4e4b\u540e\uff0c\u8be5\u670d\u52a1\u4e0b\u5b9e\u4f8b\u7684\u72b6\u6001\u4fe1\u606f\u4ee5\u53ca\u9650\u6d41\u4fe1\u606f\u4f1a\u663e\u793a\u5728 status \u4e2d\uff0c\u5982\u4e0b\u3002 apiVersion: microservice.netease.com/v1alpha1 kind: SmartLimiter metadata: name: test-svc namespace: default spec: descriptors: - action: quota: 3 unit: 1 condition: true match: - exact_match: user invert_match: false name: Bob status: endPointStatus: cpu: 398293 # \u4e1a\u52a1\u5bb9\u5668\u548csidecar\u5bb9\u5668\u5360\u7528CPU\u4e4b\u548c cpu_max: 286793 # CPU\u5360\u7528\u6700\u5927\u7684\u5bb9\u5668 memory: 68022 # \u4e1a\u52a1\u5bb9\u5668\u548csidecar\u5bb9\u5668\u5185\u5b58\u5360\u7528\u4e4b\u548c memory_max: 55236 # \u5185\u5b58\u5360\u7528\u6700\u5927\u7684\u5bb9\u5668 pod: 1 ratelimitStatus: - action: fill_interval: seconds: 1 quota: 3 \u57fa\u4e8e\u76d1\u63a7\u7684\u81ea\u9002\u5e94\u9650\u6d41 \u83b7\u5f97\u76d1\u63a7\u4fe1\u606f\u4e4b\u540e\uff0c\u53ef\u4ee5\u5c06\u76d1\u63a7\u4fe1\u606f\u6761\u76ee\u914d\u7f6e\u5230 condition \uff0c\u4f8b\u5982\u5e0c\u671bcpu\u8d85\u8fc7300m\u65f6\u89e6\u53d1\u9650\u6d41\uff0c\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a apiVersion: microservice.netease.com/v1alpha1 kind: SmartLimiter metadata: name: test-svc namespace: default spec: descriptors: - action: quota: 3 unit: 1 condition: {cpu} 300000 # cpu\u7684\u5355\u4f4d\u4e3ans\uff0c\u9996\u5148\u4f1a\u6839\u636eendPointStatus\u4e2dcpu\u7684\u503c\u5c06\u7b97\u5f0f\u6e32\u67d3\u4e3a398293 300000 match: - exact_match: user invert_match: false name: Bob status: endPointStatus: cpu: 398293 # \u4e1a\u52a1\u5bb9\u5668\u548csidecar\u5bb9\u5668\u5360\u7528CPU\u4e4b\u548c cpu_max: 286793 # CPU\u5360\u7528\u6700\u5927\u7684\u5bb9\u5668 memory: 68022 # \u4e1a\u52a1\u5bb9\u5668\u548csidecar\u5bb9\u5668\u5185\u5b58\u5360\u7528\u4e4b\u548c memory_max: 55236 # \u5185\u5b58\u5360\u7528\u6700\u5927\u7684\u5bb9\u5668 pod: 1 ratelimitStatus: - action: fill_interval: seconds: 1 quota: 3 condition\u4e2d\u7684\u7b97\u5f0f\u4f1a\u6839\u636eendPointStatus\u7684\u6761\u76ee\u8fdb\u884c\u6e32\u67d3\uff0c\u6e32\u67d3\u540e\u7684\u7b97\u5f0f\u82e5\u8ba1\u7b97\u7ed3\u679c\u4e3atrue\uff0c\u5219\u4f1a\u89e6\u53d1\u9650\u6d41\u3002 \u670d\u52a1\u9650\u6d41 \u7531\u4e8e\u7f3a\u4e4f\u5168\u5c40\u914d\u989d\u7ba1\u7406\u7ec4\u4ef6\uff0c\u6211\u4eec\u65e0\u6cd5\u505a\u5230\u7cbe\u786e\u7684\u670d\u52a1\u9650\u6d41\uff0c\u4f46\u662f\u5728\u5047\u5b9a\u8d1f\u8f7d\u5747\u8861\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\uff0c\u5b9e\u4f8b\u9650\u6d41\u6570=\u670d\u52a1\u9650\u6d41\u6570/\u5b9e\u4f8b\u4e2a\u6570\u3002\u5047\u5b9atest-svc\u7684\u670d\u52a1\u9650\u6d41\u6570\u4e3a3\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06quota\u5b57\u6bb5\u914d\u7f6e\u4e3a3/{pod}\uff0c\u5728\u670d\u52a1\u53d1\u751f\u6269\u5bb9\u65f6\uff0c\u53ef\u4ee5\u5728\u9650\u6d41\u72b6\u6001\u680f\u4e2d\u770b\u5230\u5b9e\u4f8b\u9650\u6d41\u6570\u7684\u53d8\u5316\u3002 apiVersion: microservice.netease.com/v1alpha1 kind: SmartLimiter metadata: name: test-svc namespace: default spec: descriptors: - action: quota: 3/{pod} # \u7b97\u5f0f\u4f1a\u6839\u636eendPointStatus\u4e2dpod\u503c\u6e32\u67d3\u4e3a3/3 unit: 1 condition: {cpu} 300000 match: - exact_match: user invert_match: false name: Bob status: endPointStatus: cpu: xxxxx cpu_max: xxxx memory: xxx memory_max: xx pod: 3 # test-svc\u7684endpoint\u6269\u5bb9\u6210\u4e863 ratelimitStatus: - action: fill_interval: seconds: 1 quota: 1 \u663e\u7136\uff0c3/3=1","title":"\u81ea\u9002\u5e94\u9650\u6d41"},{"location":"getting_started/ratelimit/#_1","text":"\u4f7f\u7528Slime\u7684\u81ea\u9002\u5e94\u9650\u6d41\u529f\u80fd\u9700\u5728ConfigMap\u4e2d\u5f00\u542fRatlimit\u6a21\u5757\uff1a { ratelimit : { enable : true } //... } \u4f7f\u7528\u9650\u6d41\u529f\u80fd\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u4e3a\u76ee\u6807\u670d\u52a1\u5b9a\u4e49\u901a\u4e48\u7684SmartLimite\u8d44\u6e90\u5373\u53ef\uff0c\u5982\u4e0b\u6240\u793a\uff1a apiVersion: microservice.netease.com/v1alpha1 kind: SmartLimiter metadata: name: test-svc namespace: default spec: descriptors: - action: quota: 3 unit: 1 condition: true \u8fd9\u4efd\u914d\u7f6e\u53ef\u4ee5\u9650\u5236\u5e26\u6709 user=Bob \u7684\u5934\u7684\u8bf7\u6c42\u5bf9test-svc\u670d\u52a1\u4e2d\u5b9e\u4f8b\u7684\u8bbf\u95ee\uff0c\u9650\u6d41\u6b21\u6570\u4e3a\u6bcf\u79d23\u6b21\u3002\u5c06\u914d\u7f6e\u63d0\u4ea4\u4e4b\u540e\uff0c\u8be5\u670d\u52a1\u4e0b\u5b9e\u4f8b\u7684\u72b6\u6001\u4fe1\u606f\u4ee5\u53ca\u9650\u6d41\u4fe1\u606f\u4f1a\u663e\u793a\u5728 status \u4e2d\uff0c\u5982\u4e0b\u3002 apiVersion: microservice.netease.com/v1alpha1 kind: SmartLimiter metadata: name: test-svc namespace: default spec: descriptors: - action: quota: 3 unit: 1 condition: true match: - exact_match: user invert_match: false name: Bob status: endPointStatus: cpu: 398293 # \u4e1a\u52a1\u5bb9\u5668\u548csidecar\u5bb9\u5668\u5360\u7528CPU\u4e4b\u548c cpu_max: 286793 # CPU\u5360\u7528\u6700\u5927\u7684\u5bb9\u5668 memory: 68022 # \u4e1a\u52a1\u5bb9\u5668\u548csidecar\u5bb9\u5668\u5185\u5b58\u5360\u7528\u4e4b\u548c memory_max: 55236 # \u5185\u5b58\u5360\u7528\u6700\u5927\u7684\u5bb9\u5668 pod: 1 ratelimitStatus: - action: fill_interval: seconds: 1 quota: 3","title":"\u7528\u6cd5\u4ecb\u7ecd"},{"location":"getting_started/ratelimit/#_2","text":"\u83b7\u5f97\u76d1\u63a7\u4fe1\u606f\u4e4b\u540e\uff0c\u53ef\u4ee5\u5c06\u76d1\u63a7\u4fe1\u606f\u6761\u76ee\u914d\u7f6e\u5230 condition \uff0c\u4f8b\u5982\u5e0c\u671bcpu\u8d85\u8fc7300m\u65f6\u89e6\u53d1\u9650\u6d41\uff0c\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a apiVersion: microservice.netease.com/v1alpha1 kind: SmartLimiter metadata: name: test-svc namespace: default spec: descriptors: - action: quota: 3 unit: 1 condition: {cpu} 300000 # cpu\u7684\u5355\u4f4d\u4e3ans\uff0c\u9996\u5148\u4f1a\u6839\u636eendPointStatus\u4e2dcpu\u7684\u503c\u5c06\u7b97\u5f0f\u6e32\u67d3\u4e3a398293 300000 match: - exact_match: user invert_match: false name: Bob status: endPointStatus: cpu: 398293 # \u4e1a\u52a1\u5bb9\u5668\u548csidecar\u5bb9\u5668\u5360\u7528CPU\u4e4b\u548c cpu_max: 286793 # CPU\u5360\u7528\u6700\u5927\u7684\u5bb9\u5668 memory: 68022 # \u4e1a\u52a1\u5bb9\u5668\u548csidecar\u5bb9\u5668\u5185\u5b58\u5360\u7528\u4e4b\u548c memory_max: 55236 # \u5185\u5b58\u5360\u7528\u6700\u5927\u7684\u5bb9\u5668 pod: 1 ratelimitStatus: - action: fill_interval: seconds: 1 quota: 3 condition\u4e2d\u7684\u7b97\u5f0f\u4f1a\u6839\u636eendPointStatus\u7684\u6761\u76ee\u8fdb\u884c\u6e32\u67d3\uff0c\u6e32\u67d3\u540e\u7684\u7b97\u5f0f\u82e5\u8ba1\u7b97\u7ed3\u679c\u4e3atrue\uff0c\u5219\u4f1a\u89e6\u53d1\u9650\u6d41\u3002","title":"\u57fa\u4e8e\u76d1\u63a7\u7684\u81ea\u9002\u5e94\u9650\u6d41"},{"location":"getting_started/ratelimit/#_3","text":"\u7531\u4e8e\u7f3a\u4e4f\u5168\u5c40\u914d\u989d\u7ba1\u7406\u7ec4\u4ef6\uff0c\u6211\u4eec\u65e0\u6cd5\u505a\u5230\u7cbe\u786e\u7684\u670d\u52a1\u9650\u6d41\uff0c\u4f46\u662f\u5728\u5047\u5b9a\u8d1f\u8f7d\u5747\u8861\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\uff0c\u5b9e\u4f8b\u9650\u6d41\u6570=\u670d\u52a1\u9650\u6d41\u6570/\u5b9e\u4f8b\u4e2a\u6570\u3002\u5047\u5b9atest-svc\u7684\u670d\u52a1\u9650\u6d41\u6570\u4e3a3\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06quota\u5b57\u6bb5\u914d\u7f6e\u4e3a3/{pod}\uff0c\u5728\u670d\u52a1\u53d1\u751f\u6269\u5bb9\u65f6\uff0c\u53ef\u4ee5\u5728\u9650\u6d41\u72b6\u6001\u680f\u4e2d\u770b\u5230\u5b9e\u4f8b\u9650\u6d41\u6570\u7684\u53d8\u5316\u3002 apiVersion: microservice.netease.com/v1alpha1 kind: SmartLimiter metadata: name: test-svc namespace: default spec: descriptors: - action: quota: 3/{pod} # \u7b97\u5f0f\u4f1a\u6839\u636eendPointStatus\u4e2dpod\u503c\u6e32\u67d3\u4e3a3/3 unit: 1 condition: {cpu} 300000 match: - exact_match: user invert_match: false name: Bob status: endPointStatus: cpu: xxxxx cpu_max: xxxx memory: xxx memory_max: xx pod: 3 # test-svc\u7684endpoint\u6269\u5bb9\u6210\u4e863 ratelimitStatus: - action: fill_interval: seconds: 1 quota: 1 \u663e\u7136\uff0c3/3=1","title":"\u670d\u52a1\u9650\u6d41"}]}